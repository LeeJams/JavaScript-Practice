function factorial(x) {
  if (x<0) return;
  if (x===0) return 1;
  return x * factorial(x-1);
}

console.log(factorial(3));
// 6

/* 
  재귀의 중요 부분

  종료 조건
  간단하게, if(나쁜 값이 들어왔다면) { 정지! };과 같이 이해하시면 됩니다. 
  종료 조건은 재귀의 안전장치입니다. 종료 조건을 여러분들의 긴급 브레이크처럼 생각하세요. 
  좋지 않은 입력 값이 들어왔을 때, 재귀가 계속하여 동작하는 것을 방지해줍니다. 
  위의 팩토리얼 예제에서, if (x < 0) return;은 우리가 설정한 종료 조건입니다. 
  음수의 팩토리얼을 구하는 것은 불가능합니다. 
  그래서 우리는 음수 입력 값이 들어왔을 때, 팩토리얼 함수가 작동하지 않길 원합니다.

  기반 조건(Base case, 기저 상태)
  간단하게, if(이런 일이 일어난다면) { 성공! }과 같이 이해하시면 됩니다. 
  이 조건 역시 재귀 함수를 멈춘다는 점을 감안하면, 기반 조건은 어쩌면 재귀의 종료조건과 비슷합니다. 
  하지만 종료 조건은 모든 나쁜 데이터들을 잡아낸 다는 것을 기억하세요. 
  반면에 기반 조건은 재귀 함수의 목적 입니다. 기반 조건은 주로 if 문 내부에 있습니다. 
  팩토리얼 예제에서는, if (x === 0) return 1;이 기반 조건이었습니다. 
  x가 0까지 내려갔을 때, 우리는 팩토리얼을 구하는데 성공한 것입니다!

  재귀
  간단하게, 함수가 자기 자신을 호출하는 것입니다. 
  팩토리얼 예제에서, return x * factorial(x -1);부분이 실제로 재귀가 일어나는 곳입니다. 
  우리는 숫자 x가 factorial(x-1)함수의 결과 값으로 곱해진 어떤 값을 반환합니다.
*/

function factorial_1(x) {
  // 종료 조건
  if (x < 0) return;
  
  // 기반 조건
  if (x === 0) return 1;
  
  // 재귀
  return x * factorial_1(x - 1);
}

factorial_1(3);
// 6